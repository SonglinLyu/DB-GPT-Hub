index: 17
db_id: concert_singer
medium pred: SELECT max(capacity) ,  avg(capacity) FROM stadium
medium gold: select max(capacity), average from stadium

index: 62
db_id: pets_1
extra pred: SELECT major ,  age FROM Student EXCEPT SELECT T1.major ,  T1.age FROM Student AS T1 JOIN Has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 63
db_id: pets_1
extra pred: SELECT T1.major ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype != 'Cat'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 65
db_id: pets_1
hard pred: SELECT StuID FROM Has_pet EXCEPT SELECT T1.StuID FROM Has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.PetType  =  'Cat'
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

index: 66
db_id: pets_1
extra pred: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Dog' EXCEPT SELECT DISTINCT T1.fname ,   T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Cat'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 67
db_id: pets_1
extra pred: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Dog' EXCEPT SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.pettype  =  'Cat'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

index: 72
db_id: pets_1
medium pred: SELECT avg(age) ,  max(age) ,  pet_type FROM pets GROUP BY pet_type
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

index: 90
db_id: car_1
medium pred: SELECT ContId ,  Continent ,  count(*) FROM continents GROUP BY ContId
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

index: 91
db_id: car_1
medium pred: SELECT ContId ,  Continent ,  count(*) FROM continents GROUP BY ContId
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

index: 96
db_id: car_1
hard pred: SELECT Model FROM car_names ORDER BY Horsepower ASC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

index: 98
db_id: car_1
extra pred: SELECT T1.model FROM model_list AS T1 JOIN car_names AS T2 ON T1.model  =  T2.model JOIN cars_data AS T3 ON T3.MakeId  =  T2.MakeId WHERE T3.Weight  <  (SELECT avg(Weight) FROM cars_data)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

index: 100
db_id: car_1
extra pred: SELECT DISTINCT T1.Maker FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

index: 101
db_id: car_1
extra pred: SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Year  =  1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

index: 102
db_id: car_1
extra pred: SELECT T1.Make ,  T1.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.MakeId ORDER BY T2.Year LIMIT 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

index: 103
db_id: car_1
extra pred: SELECT maker ,  YEAR FROM cars_data ORDER BY YEAR LIMIT 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

index: 104
db_id: car_1
hard pred: SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.Model  =  T2.MakeId WHERE T2.Year  >  1980
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

index: 105
db_id: car_1
hard pred: SELECT DISTINCT Model FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE YEAR  >  1980)
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

index: 106
db_id: car_1
hard pred: SELECT T1.Continent ,  COUNT(*) FROM continents AS T1 JOIN car_makers AS T2 ON T1.ContId  =  T2.Country JOIN countries AS T3 ON T2.Country  =  T3.CountryId GROUP BY T1.Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

index: 107
db_id: car_1
hard pred: SELECT T1.Continent ,  COUNT(*) FROM continents AS T1 JOIN car_makers AS T2 ON T1.ContId  =  T2.Country JOIN countries AS T3 ON T2.Country  =  T3.CountryId GROUP BY T1.Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

index: 108
db_id: car_1
extra pred: SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryID  =  T2.Country WHERE T1.CountryID  =  (SELECT country FROM car_makers GROUP BY country ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

index: 109
db_id: car_1
extra pred: SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Country  =  (SELECT country FROM car_makers GROUP BY country ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

index: 111
db_id: car_1
medium pred: SELECT count(*) ,  T1.id ,  T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.id  =  T2.MakeId GROUP BY T1.id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

index: 112
db_id: car_1
medium pred: SELECT Accelerate FROM cars_data WHERE MakeId  =  (SELECT MakeId FROM car_names WHERE Model  =  "amc hornet sportabout" )
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

index: 113
db_id: car_1
medium pred: SELECT Accelerate FROM cars_data WHERE Make  =  "amc hornet sportabout";
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

index: 114
db_id: car_1
medium pred: SELECT count(*) FROM car_makers WHERE Country  =  "France"
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

index: 115
db_id: car_1
medium pred: SELECT COUNT(*) FROM car_makers WHERE Country  =  "France"
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

index: 116
db_id: car_1
hard pred: SELECT count(DISTINCT Model) FROM car_names WHERE Make  =  "usa";
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

index: 117
db_id: car_1
hard pred: SELECT count(*) FROM cars_data WHERE MakeId IN (SELECT id FROM car_names WHERE Model  =  "model" );
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

index: 125
db_id: car_1
medium pred: SELECT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

index: 130
db_id: car_1
extra pred: SELECT CountryName FROM countries WHERE CountryName IN (SELECT Country FROM car_makers WHERE Continent  =  "Europe") GROUP BY CountryName HAVING count(*)  >=  3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

index: 131
db_id: car_1
extra pred: SELECT CountryName FROM countries WHERE Continent  =  "Europe" GROUP BY CountryName HAVING count(*)  >=  3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

index: 132
db_id: car_1
extra pred: SELECT max(Horsepower) ,  T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.id = T2.id WHERE T2.Cylinders = 3 GROUP BY T1.Make
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

index: 133
db_id: car_1
extra pred: SELECT MAX(Horsepower) ,  model FROM cars_data WHERE cylinders  =  3 GROUP BY model
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

index: 134
db_id: car_1
hard pred: SELECT Model FROM car_names ORDER BY MPG DESC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

index: 135
db_id: car_1
hard pred: SELECT Model FROM car_names ORDER BY MPG DESC LIMIT 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;

index: 138
db_id: car_1
medium pred: SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.MakeId  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model WHERE T3.Maker  =  'volvo'
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

index: 139
db_id: car_1
medium pred: SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN car_brands AS T3 ON T2.MakeId  =  T3.MakeId WHERE T3.Maker  =  "Volvo"
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

index: 143
db_id: car_1
hard pred: SELECT Model FROM model_list GROUP BY Model ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

index: 149
db_id: car_1
medium pred: SELECT count(*) FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.Model WHERE T1.Maker  =  'American Motor Company'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

index: 151
db_id: car_1
medium pred: SELECT T1.Maker ,  T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

index: 152
db_id: car_1
extra pred: SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.Model JOIN cars_data AS T3 ON T2.MakeId  =  T3.MakeId WHERE T1.Maker  =  "General Motors" OR T3.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

index: 153
db_id: car_1
extra pred: SELECT DISTINCT T1.model FROM model_list AS T1 JOIN car_names AS T2 ON T1.model = T2.model JOIN cars_data AS T3 ON T3.MakeId  =  T2.MakeId WHERE T1.Maker  =  'General Motors' OR T3.Weight  >  3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

index: 155
db_id: car_1
easy pred: SELECT DISTINCT YEAR FROM cars_data WHERE Weight  <  4000 INTERSECT SELECT DISTINCT YEAR FROM cars_data WHERE Weight  >  3000
easy gold: select distinct year from cars_data where weight between 3000 and 4000;

index: 158
db_id: car_1
extra pred: SELECT min(T2.Cylinders) FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  "volvo" ORDER BY T2.Accelerate ASC LIMIT 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

index: 160
db_id: car_1
hard pred: SELECT count(*) FROM cars_data WHERE Accelerate  >  ( SELECT max(Horsepower) FROM cars_data );
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

index: 161
db_id: car_1
hard pred: SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Horsepower) FROM cars_data);
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

index: 162
db_id: car_1
medium pred: SELECT CountryName FROM car_makers GROUP BY CountryName HAVING count(*)  >  2
medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2

index: 166
db_id: car_1
extra pred: SELECT model FROM car_names WHERE MakeId IN (SELECT max(MakeId) FROM cars_data WHERE Cyclinders  =  4)
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

index: 167
db_id: car_1
extra pred: SELECT Model FROM car_names WHERE Cylinders  =  4 GROUP BY Model ORDER BY AVG(Horsepower) DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

index: 168
db_id: car_1
extra pred: SELECT T1.MakeId ,  T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE Horsepower  >  ( SELECT min(Horsepower) FROM cars_data ) AND T1.MakeId NOT IN ( SELECT T1.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.Model WHERE T2.Model  =  "Accord" AND T1.Make != "Honda" )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

index: 169
db_id: car_1
extra pred: SELECT makeid ,  model FROM car_names WHERE makeid NOT IN (SELECT makeid FROM cars_data WHERE horsepower  >  1500) AND cylinders  >  4
extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;

index: 170
db_id: car_1
medium pred: SELECT max(MPG) FROM cars_data WHERE Cyclinders  =  8 OR YEAR  <  1980
medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980

index: 172
db_id: car_1
extra pred: SELECT Model FROM car_names WHERE Weight  <  3500 EXCEPT SELECT T2.Model FROM car_names AS T1 JOIN car_names AS T2 ON T1.MakeId  =  T2.MakeId JOIN car_makers AS T3 ON T1.MakeId  =  T3.Maker WHERE T3.Maker  =  'Ford Motor Company'
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

index: 173
db_id: car_1
extra pred: SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.Model JOIN cars_data AS T3 ON T3.MakeId  =  T2.MakeId WHERE T3.Weight  <  3500 AND T1.Maker != 'Ford Motor Company'
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

index: 174
db_id: car_1
hard pred: SELECT CountryName FROM countries EXCEPT SELECT Country FROM car_makers
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

index: 176
db_id: car_1
extra pred: SELECT id ,  Maker FROM car_makers GROUP BY id HAVING count(*)  >=  2 INTERSECT SELECT id ,  Maker FROM car_makers GROUP BY id HAVING count(*)  >  3
extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;

index: 177
db_id: car_1
extra pred: SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker GROUP BY T1.id HAVING count(*)  >  2 INTERSECT SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T2.MakeId  =  T1.id GROUP BY T2.MakeId HAVING count(*)  >  3
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

index: 178
db_id: car_1
extra pred: SELECT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country EXCEPT SELECT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Maker  =  'fiat' GROUP BY T1.CountryId HAVING count(*)  >  3
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

index: 179
db_id: car_1
extra pred: SELECT T1.countryid ,  T2.countryname FROM car_makers AS T1 JOIN countries AS T2 ON T1.country  =  T2.continentid WHERE T1.maker  =  "fiat" OR (SELECT count(*) FROM car_makers WHERE country  =  T1.countryid)  >  3
extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';

index: 214
db_id: flight_2
medium pred: SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.Airline WHERE T2.Airline  =  'JetBlue Airways'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

index: 215
db_id: flight_2
medium pred: SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.Airline WHERE T2.Airline  =  "Jetblue Airways"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

index: 222
db_id: flight_2
extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

index: 223
db_id: flight_2
extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

index: 224
db_id: flight_2
extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

index: 225
db_id: flight_2
extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

index: 226
db_id: flight_2
extra pred: SELECT destairport FROM flights GROUP BY destairport ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

index: 228
db_id: flight_2
extra pred: SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

index: 232
db_id: flight_2
extra pred: SELECT T1.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.uid ORDER BY count(*) LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

index: 233
db_id: flight_2
extra pred: SELECT T1.CountryAbbrev ,  T2.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

index: 239
db_id: flight_2
extra pred: SELECT T1.airline FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN flights AS T3 ON T1.airline  =  T3.airline JOIN airports AS T4 ON T3.flightno  =  T4.flightno WHERE T2.AirportName  =  "APG" INTERSECT SELECT T1.airline FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode JOIN flights AS T3 ON T1.airline  =  T3.airline JOIN airports AS T4 ON T3.flightno  =  T4.flightno WHERE T2.AirportName  =  "CVO"
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

index: 243
db_id: flight_2
medium pred: SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.airline  =  T2.airline GROUP BY T1.airline HAVING count(*)  >=  10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

index: 244
db_id: flight_2
medium pred: SELECT DISTINCT Airline FROM flights GROUP BY Airline HAVING count(*)  <=  200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

index: 245
db_id: flight_2
medium pred: SELECT T1.airline FROM airlines AS T1 JOIN flights AS T2 ON T1.airline  =  T2.airline GROUP BY T1.airline HAVING count(*)  <=  200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

index: 246
db_id: flight_2
medium pred: SELECT FlightNo FROM flights WHERE Airline  =  "United Airlines"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

index: 247
db_id: flight_2
medium pred: SELECT FlightNo FROM airlines AS T1 JOIN flights AS T2 ON T1.Airline  =  T2.Airline WHERE T1.Airline  =  "United Airlines"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

index: 258
db_id: flight_2
hard pred: SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport ,  DestAirport FROM flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

index: 259
db_id: flight_2
hard pred: SELECT airportname FROM airports EXCEPT SELECT T2.airportname FROM flights AS T1 JOIN airports AS T2 ON T1.sourceairport  =  T2.airportcode EXCEPT SELECT T2.airportname FROM flights AS T1 JOIN airports AS T2 ON T1.destairport  =  T2.airportcode
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

index: 270
db_id: employee_hire_evaluation
medium pred: SELECT name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

index: 271
db_id: employee_hire_evaluation
medium pred: SELECT name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

index: 278
db_id: employee_hire_evaluation
extra pred: SELECT T2.name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID  =  T2.Employee_ID ORDER BY T1.Year_awarded DESC LIMIT 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

index: 287
db_id: employee_hire_evaluation
hard pred: SELECT name FROM shop WHERE number_products  =  0
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

index: 312
db_id: cre_Doc_Template_Mgt
extra pred: SELECT T2.template_id ,  T1.template_type_code FROM Ref_Template_Types AS T1 JOIN templates AS T2 ON T1.template_type_code  =  T2.template_type_code GROUP BY T2.template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

index: 313
db_id: cre_Doc_Template_Mgt
extra pred: SELECT T2.template_id ,  T1.template_type_code FROM Ref_Template_Types AS T1 JOIN templates AS T2 ON T1.template_type_code  =  T2.template_type_code GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

index: 323
db_id: cre_Doc_Template_Mgt
easy pred: SELECT DISTINCT template_type_code FROM Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

index: 337
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_type_code ,  min(version_number) FROM Templates GROUP BY template_type_code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

index: 339
db_id: cre_Doc_Template_Mgt
medium pred: SELECT T2.template_type_code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T1.template_id WHERE T1.document_name  =  "Data base"
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

index: 342
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_type_code ,  count(*) FROM Documents GROUP BY template_type_code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

index: 344
db_id: cre_Doc_Template_Mgt
extra pred: SELECT T2.template_type_code FROM templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code  =  T2.template_type_code GROUP BY T2.template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

index: 345
db_id: cre_Doc_Template_Mgt
extra pred: SELECT T2.template_type_code FROM templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code  =  T2.template_type_code GROUP BY T2.template_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

index: 346
db_id: cre_Doc_Template_Mgt
hard pred: SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

index: 347
db_id: cre_Doc_Template_Mgt
hard pred: SELECT template_type_code FROM Ref_Template_Types EXCEPT SELECT template_type_code FROM Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

index: 357
db_id: cre_Doc_Template_Mgt
medium pred: SELECT template_id FROM Templates WHERE template_type_code  =  "Presentation"
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

index: 362
db_id: cre_Doc_Template_Mgt
medium pred: SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text  =  'Korea '
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

index: 365
db_id: cre_Doc_Template_Mgt
medium pred: SELECT T2.paragraph_text ,  T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name  =  "Welcome to NY"
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

index: 370
db_id: cre_Doc_Template_Mgt
medium pred: SELECT document_id ,  document_name ,  count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY document_id
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

index: 371
db_id: cre_Doc_Template_Mgt
medium pred: SELECT DISTINCT document_id ,  document_name ,  (SELECT count(*) FROM Paragraphs WHERE Documents.document_id  =  Document_id) FROM Documents
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

index: 374
db_id: cre_Doc_Template_Mgt
extra pred: SELECT document_id ,  document_name FROM Documents ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

index: 375
db_id: cre_Doc_Template_Mgt
extra pred: SELECT document_id ,  document_name FROM Documents ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

index: 400
db_id: course_teach
medium pred: SELECT T2.Name ,  T1.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

index: 401
db_id: course_teach
medium pred: SELECT T2.Name ,  T1.Course FROM course AS T1 JOIN teacher AS T2 ON T1.Course_ID  =  T2.Course_ID_1
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

index: 402
db_id: course_teach
hard pred: SELECT T2.Name ,  T1.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID ORDER BY T2.Course ASC
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

index: 403
db_id: course_teach
hard pred: SELECT T2.Course ,  T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_ID  =  T2.teacher_ID ORDER BY T1.Name
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

index: 421
db_id: museum_visit
extra pred: SELECT T1.id ,  T1.name ,  T1.level_of_membership FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id GROUP BY T2.visitor_id ORDER BY sum(T2.total_spent) DESC LIMIT 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

index: 428
db_id: museum_visit
extra pred: SELECT count(*) FROM visitor WHERE id NOT IN ( SELECT visitor_id FROM museum WHERE open_year  >  2010 )
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

index: 440
db_id: wta_1
easy pred: SELECT max(loser_rank) FROM matches
easy gold: SELECT min(loser_rank) FROM matches

index: 441
db_id: wta_1
easy pred: SELECT max(loser_rank) FROM matches
easy gold: SELECT min(loser_rank) FROM matches

index: 448
db_id: wta_1
hard pred: SELECT T1.winner_name FROM matches AS T1 JOIN tourney_dates AS T2 ON T1.tourney_date  =  T2.date_y WHERE YEAR  =  2013 INTERSECT SELECT T1.winner_name FROM matches AS T1 JOIN tourney_dates AS T2 ON T1.tourney_date  =  T2.date_y WHERE YEAR  =  2016
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

index: 449
db_id: wta_1
hard pred: SELECT T1.winner_name FROM matches AS T1 JOIN rankings AS T2 ON T1.winner_id  =  T2.player_id WHERE T2.year  =  2013 INTERSECT SELECT T1.winner_name FROM matches AS T1 JOIN rankings AS T2 ON T1.winner_id  =  T2.player_id WHERE T2.year  =  2016
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

index: 452
db_id: wta_1
extra pred: SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id JOIN tourney_rankings AS T3 ON T2.player_id  =  T3.player_id WHERE T2.ranking  =  "Winner" AND T3.tourney_name  =  "Australian Open" AND T3.year  =  2017
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

index: 453
db_id: wta_1
extra pred: SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking  =  "World Team" INTERSECT SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking_date LIKE "2016%" AND T2.tours  =  3 AND T2.ranking  =  "Australian Open"
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

index: 454
db_id: wta_1
medium pred: SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

index: 455
db_id: wta_1
medium pred: SELECT first_name ,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

index: 460
db_id: wta_1
hard pred: SELECT first_name ,  country_code FROM players GROUP BY country_code ORDER BY sum(tours) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

index: 461
db_id: wta_1
hard pred: SELECT first_name ,  country_code FROM players ORDER BY tours DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

index: 464
db_id: wta_1
hard pred: SELECT winner_name ,  winner_rank_points FROM rankings ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

index: 465
db_id: wta_1
hard pred: SELECT winner_name ,  max(winner_rank_points) FROM matches GROUP BY winner_name ORDER BY max(winner_rank_points) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

index: 466
db_id: wta_1
hard pred: SELECT winner_name FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id JOIN tourney_info AS T3 ON T3.tourney_id  =  T2.tourney_id WHERE T1.ranking_points  =  (SELECT max(ranking_points) FROM rankings AS T1 JOIN tourney_info AS T3 ON T1.tourney_date  =  T3.tourning_date WHERE T3.tourney_name  =  "Australian Open")
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

index: 467
db_id: wta_1
hard pred: SELECT winner_name FROM ranks AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE tourney_name  =  "Australian Open" ORDER BY T1.ranking_points DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

index: 473
db_id: wta_1
medium pred: SELECT first_name ,  sum(ranking_points) FROM players GROUP BY first_name
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

index: 481
db_id: wta_1
medium pred: SELECT count(*) ,  ranking_date FROM rankings GROUP BY ranking_date
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

index: 486
db_id: wta_1
medium pred: SELECT COUNT (DISTINCT winner_id) FROM matches WHERE winner_hand  =  "left" AND tourney_id  =  "WTA"
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

index: 494
db_id: battle_death
medium pred: SELECT name ,  date ,  RESULT FROM battle
medium gold: SELECT name ,  date FROM battle

index: 495
db_id: battle_death
medium pred: SELECT max(deaths) ,  min(deaths) FROM (SELECT count(*) AS deaths FROM death GROUP BY killed);
medium gold: SELECT max(killed) ,  min(killed) FROM death

index: 497
db_id: battle_death
medium pred: SELECT note ,  injured FROM death WHERE caused_by_ship_id IN ( SELECT id FROM ship WHERE tonnage  =  't' )
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

index: 500
db_id: battle_death
hard pred: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING count(*)  >  10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

index: 501
db_id: battle_death
extra pred: SELECT T1.id ,  T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T2.caused_by_ship_id ORDER BY sum(T2.injured) DESC LIMIT 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1

index: 502
db_id: battle_death
medium pred: SELECT DISTINCT name FROM battle WHERE bulgarian_commander BETWEEN 'Kaloyan' AND 'Baldwin I'
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

index: 506
db_id: battle_death
extra pred: SELECT t1.name ,  t1.result ,  t1.bulgarian_commander FROM battle AS t1 JOIN ship AS t2 ON t1.id  =  t2.lost_in_battle WHERE t2.location  =  'English Channel'
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

index: 517
db_id: student_transcripts_tracking
extra pred: SELECT T1.department_name ,  T1.department_id FROM DEGREE_PROGRAMS AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1

index: 524
db_id: student_transcripts_tracking
medium pred: SELECT course_name ,  course_description FROM COURSES
medium gold: SELECT section_name ,  section_description FROM Sections

index: 525
db_id: student_transcripts_tracking
medium pred: SELECT course_name ,  course_description FROM COURSES
medium gold: SELECT section_name ,  section_description FROM Sections

index: 527
db_id: student_transcripts_tracking
medium pred: SELECT T1.course_name ,  T1.course_id FROM courses AS T1 JOIN sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <  2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

index: 533
db_id: student_transcripts_tracking
medium pred: SELECT T1.department_description FROM DEPARTMENTS AS T1 JOIN degree_programs AS T2 ON T1.department_id  =  T2.department_id WHERE T2.degree_summary_name LIKE '%computer%'
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

index: 534
db_id: student_transcripts_tracking
medium pred: SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T1.student_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

index: 535
db_id: student_transcripts_tracking
medium pred: SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T2.student_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id HAVING count(*)  =  2) INTERSECT SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T2.student_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE semester_id IN (SELECT semester_id FROM student_enrolment GROUP BY semester_id HAVING count(*)  =  2)
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

index: 537
db_id: student_transcripts_tracking
hard pred: SELECT T3.first_name ,  T3.middle_name ,  T3.last_name FROM Student_Enrolment_Courses AS T1 JOIN courses AS T2 JOIN students AS T3 ON T1.course_id  =  T2.course_id AND T1.student_enrolment_id  =  T3.student_enrolment_id JOIN degree_programs AS T4 ON T4.degree_program_id  =  T3.degree_program_id WHERE T4.degree_summary_name  =  'Bachelors'
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

index: 542
db_id: student_transcripts_tracking
extra pred: SELECT T2.student_id ,  T2.first_name ,  T2.middle_name ,  T2.last_name ,  count(*) FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 543
db_id: student_transcripts_tracking
extra pred: SELECT T2.first_name ,  T2.middle_name ,  T2.last_name ,  T2.student_id ,  count(*) FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 551
db_id: student_transcripts_tracking
extra pred: SELECT last_name FROM students AS T1 JOIN address AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE state_province_county  =  'North Carolina' EXCEPT SELECT T3.last_name FROM students AS T3 JOIN student_enrolment AS T4 ON T3.student_id  =  T4.student_id
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

index: 552
db_id: student_transcripts_tracking
medium pred: SELECT T1.other_details ,  T2.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T2.transcript_id HAVING count(*)  >=  2
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

index: 561
db_id: student_transcripts_tracking
easy pred: SELECT first_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id = T2.address_id EXCEPT SELECT first_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

index: 562
db_id: student_transcripts_tracking
extra pred: SELECT T2.address_id ,  T1.line_1 ,  T1.line_2 ,  T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T2.current_address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

index: 563
db_id: student_transcripts_tracking
extra pred: SELECT T2.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T2.current_address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

index: 566
db_id: student_transcripts_tracking
medium pred: SELECT other_details FROM TRANSCRIPTS ORDER BY transcript_date ASC LIMIT 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

index: 567
db_id: student_transcripts_tracking
medium pred: SELECT other_details FROM transcripts ORDER BY transcript_date LIMIT 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

index: 574
db_id: student_transcripts_tracking
extra pred: SELECT transcript_date FROM TRANSCRIPTS ORDER BY count(*) LIMIT 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

index: 575
db_id: student_transcripts_tracking
extra pred: SELECT transcript_date ,  transcript_id FROM TRANSCRIPTS ORDER BY other_details LIMIT 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

index: 576
db_id: student_transcripts_tracking
extra pred: SELECT semester_name FROM student_enrolment WHERE degree_program_id  =  'Master' INTERSECT SELECT semester_name FROM student_enrolment WHERE degree_program_id  =  'Bachelor'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

index: 577
db_id: student_transcripts_tracking
extra pred: SELECT semester_id FROM student_enrolment WHERE degree_program_id  =  'Masters' INTERSECT SELECT semester_id FROM student_enrolment WHERE degree_program_id  =  'Bachelors'
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

index: 579
db_id: student_transcripts_tracking
easy pred: SELECT DISTINCT T1.line_1 ,  T1.line_2 ,  T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id UNION SELECT DISTINCT T1.line_1 ,   T1.line_2 ,   T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.permanent_address_id
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

index: 580
db_id: student_transcripts_tracking
easy pred: SELECT * FROM STUDENTS ORDER BY last_name DESC
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

index: 581
db_id: student_transcripts_tracking
easy pred: SELECT other_student_details FROM Students ORDER BY last_name DESC
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

index: 582
db_id: student_transcripts_tracking
easy pred: SELECT * FROM SECTIONS WHERE section_name  =  'h'
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

index: 583
db_id: student_transcripts_tracking
easy pred: SELECT T1.section_description FROM SECTIONS AS T1 JOIN COURSES AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  'h'
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

index: 588
db_id: tvshow
easy pred: SELECT * FROM Cartoon WHERE Directed_by  =  "Ben Jones"
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

index: 591
db_id: tvshow
easy pred: SELECT count(*) FROM Cartoon WHERE directed_by  =  "Joseph Kuhr"
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

index: 608
db_id: tvshow
medium pred: SELECT LOCALIZED_TITLE ,  COUNT(*) FROM TV_Channel GROUP BY LOCALIZED_TITLE
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

index: 621
db_id: tvshow
easy pred: SELECT Air_Date FROM TV_series WHERE Series_Name  =  "A Love of a Lifetime"
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

index: 624
db_id: tvshow
medium pred: SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Series_name  =  "A Love of a Lifetime"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

index: 625
db_id: tvshow
medium pred: SELECT series_name FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

index: 627
db_id: tvshow
medium pred: SELECT Episode FROM TV_series WHERE Series_name  =  "Sky Radio"
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

index: 637
db_id: tvshow
hard pred: SELECT DISTINCT Country FROM tv_channel EXCEPT SELECT DISTINCT Channel FROM cartoon WHERE Written_by  =  "Todd Casey"
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

index: 642
db_id: tvshow
easy pred: SELECT id FROM TV_Channel WHERE country IN (SELECT country FROM TV_channel GROUP BY country HAVING count(*)  >  2)
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

index: 643
db_id: tvshow
easy pred: SELECT id FROM tv_channel GROUP BY id HAVING count(*)  >  2
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

index: 646
db_id: tvshow
hard pred: SELECT package_option FROM tv_channel EXCEPT SELECT T1.package_option FROM tv_channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.channel WHERE T2.directed_by  =  "Ben Jones"
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

index: 647
db_id: tvshow
hard pred: SELECT Package_Option FROM TV_Channel EXCEPT SELECT Channel FROM Cartoon WHERE directed_by  =  "Ben Jones"
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

index: 699
db_id: voter_1
extra pred: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.area_code GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

index: 701
db_id: voter_1
extra pred: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.area_code JOIN contestants AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.area_code JOIN contestants AS T3 ON T2.contestant_number  =  T3.contestant_number WHERE T3.contestant_name  =  'Kelly Clauss'
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

index: 712
db_id: world_1
medium pred: SELECT Region FROM country WHERE Capital  =  "Kabul";
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

index: 713
db_id: world_1
extra pred: SELECT Language FROM countrylanguage WHERE CountryCode  =  "AW" ORDER BY Percentage DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

index: 714
db_id: world_1
extra pred: SELECT Language FROM countrylanguage WHERE CountryCode  =  "AW" AND Percentage  >  950 INTERSECT SELECT Language FROM countrylanguage WHERE CountryCode  =  "NL"
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

index: 720
db_id: world_1
easy pred: SELECT avg(lifeexpectancy) FROM country WHERE continent  =  "Africa" AND region  =  "Central";
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

index: 732
db_id: world_1
medium pred: SELECT avg(GNP) ,  sum(population) FROM country WHERE continent = "Asia" AND GNP  <  1000;
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

index: 737
db_id: world_1
medium pred: SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "AW";
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

index: 738
db_id: world_1
medium pred: SELECT COUNT ( DISTINCT language ) FROM countrylanguage WHERE countrycode  =  "AW";
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

index: 739
db_id: world_1
medium pred: SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "AFG" AND ISOFFICIAL  = 1;
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

index: 740
db_id: world_1
medium pred: SELECT sum(percentage) FROM countrylanguage WHERE CountryCode  =  "AF";
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

index: 741
db_id: world_1
extra pred: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode GROUP BY T2.countrycode ORDER BY sum(T2.percentage) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

index: 742
db_id: world_1
extra pred: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T2.CountryCode ORDER BY SUM (T2.Percentage) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

index: 745
db_id: world_1
easy pred: SELECT count(*) FROM countrylanguage WHERE language  =  "English" INTERSECT SELECT count(*) FROM countrylanguage WHERE language  =  "Dutch"
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

index: 746
db_id: world_1
easy pred: SELECT COUNT(*) FROM countrylanguage WHERE Language  =  "English" AND Language  =  "Dutch"
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

index: 747
db_id: world_1
extra pred: SELECT CountryInfo.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT CountryInfo.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

index: 749
db_id: world_1
extra pred: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "English" INTERSECT SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  "French"
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

index: 750
db_id: world_1
extra pred: SELECT name FROM country WHERE countrycode IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'Yes' AND language  =  'English') INTERSECT SELECT name FROM country WHERE countrycode IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'Yes' AND language  =  'French')
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

index: 756
db_id: world_1
extra pred: SELECT CountryCode FROM countrylanguage WHERE Language  =  "English" OR Language  =  "Dutch")
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

index: 757
db_id: world_1
extra pred: SELECT language FROM countrylanguage WHERE countrycode  =  (SELECT code FROM country WHERE continent  =  'Asia' GROUP BY language ORDER BY sum(percentage) DESC LIMIT 1) ORDER BY percentage DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

index: 758
db_id: world_1
extra pred: SELECT language FROM countrylanguage WHERE countrycode IN (SELECT countrycode FROM country WHERE continent  =  "Asia" GROUP BY language ORDER BY count(*) DESC LIMIT 1) GROUP BY language ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

index: 759
db_id: world_1
hard pred: SELECT Language FROM countrylanguage WHERE IsOfficial  =  't' AND countrycode IN ( SELECT countrycode FROM country WHERE governmentform  =  "Republic" GROUP BY Language HAVING count(*)  =  1 )
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

index: 760
db_id: world_1
hard pred: SELECT Language FROM countrylanguage WHERE IsOfficial  =  't' AND countrycode IN ( SELECT countrycode FROM country WHERE governmentform  =  "Republic" ) GROUP BY Language HAVING COUNT ( * )  =  1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

index: 761
db_id: world_1
extra pred: SELECT t1.name FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode  =  t2.countrycode WHERE t2.language  =  'English' AND t2.percentage  =  (SELECT max(percentage) FROM countrylanguage WHERE language  =  'English')
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

index: 762
db_id: world_1
extra pred: SELECT t1.name FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode  =  t2.countrycode WHERE t2.language  =  "English" AND t1.population  =  (SELECT MAX(t1.population) FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode  =  t2.countrycode WHERE t2.language  =  "English")
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

index: 765
db_id: world_1
extra pred: SELECT avg(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'yes')
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

index: 766
db_id: world_1
extra pred: SELECT avg(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'yes')
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

index: 767
db_id: world_1
extra pred: SELECT sum(t1.population) FROM country AS t2 JOIN countrylanguage AS t1 ON t2.code  =  t1.countrycode WHERE t1.language != "English"
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

index: 768
db_id: world_1
extra pred: SELECT sum(population) FROM country WHERE code NOT IN ( SELECT countrycode FROM countrylanguage WHERE isofficial  =  'yes' );
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

index: 769
db_id: world_1
medium pred: SELECT LANGUAGE FROM countrylanguage WHERE ISOFFICIAL  = 1 AND CountryCode  =  (SELECT Code FROM country WHERE headofstate  =  "Beatrix")
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

index: 770
db_id: world_1
medium pred: SELECT Language FROM countrylanguage WHERE CountryCode  =  (SELECT Code FROM country WHERE headofstate  =  "Beatrix") AND ISOFFICIAL  =  1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

index: 771
db_id: world_1
medium pred: SELECT SUM ( t2.percentage ) FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code  =  t2.countrycode WHERE t1.inpyear  <  1930 AND t2.isofficial  =  't'
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

index: 773
db_id: world_1
hard pred: SELECT name FROM country WHERE surfacearea  >  (SELECT max(surfacearea) FROM country WHERE continent  =  "Europe")
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

index: 774
db_id: world_1
hard pred: SELECT name FROM country WHERE surfacearea  >  (SELECT max(surfacearea) FROM country WHERE continent  =  "Europe")
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

index: 775
db_id: world_1
extra pred: SELECT name FROM country WHERE population  <  (SELECT min(population) FROM country WHERE continent  =  'Asia') AND continent = 'Africa'
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

index: 778
db_id: world_1
extra pred: SELECT name FROM country WHERE population  >  (SELECT max(population) FROM country WHERE continent  =  'Africa') AND continent = 'Asia'
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

index: 779
db_id: world_1
hard pred: SELECT countrycode FROM country WHERE countrycode NOT IN (SELECT countrycode FROM countrylanguage WHERE language  =  'English')
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 780
db_id: world_1
hard pred: SELECT CountryCode FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE ISOfficial  =  'yes')
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 782
db_id: world_1
easy pred: SELECT CountryCode FROM countrylanguage WHERE Language != (SELECT Language FROM countrylanguage WHERE ISOfficial  =  1)
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

index: 784
db_id: world_1
hard pred: SELECT Code FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE ISOfficial  =  'Yes' ) AND GovernmentForm  =  'Republic'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

index: 785
db_id: world_1
extra pred: SELECT t1.name FROM city AS t1 JOIN country AS t2 ON t1.countrycode  =  t2.code WHERE t2.continent  =  "Europe" AND NOT EXISTS (SELECT * FROM countrylanguage WHERE countrycode  =  t2.code AND ISofficial  =  1)
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

index: 786
db_id: world_1
extra pred: SELECT name FROM city WHERE countrycode IN (SELECT countrycode FROM country WHERE continent  =  "Europe") AND city NOT IN (SELECT city FROM countrylanguage WHERE isofficial  =  1);
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

index: 788
db_id: world_1
hard pred: SELECT DISTINCT t1.name FROM city AS t1 JOIN countrylanguage AS t2 ON t1.countrycode  =  t2.countrycode WHERE t2.isofficial  =  't' AND t2.language  =  "Chinese" AND t1.district  =  "Asia"
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

index: 791
db_id: world_1
medium pred: SELECT name ,  leader ,  GNP ,  Capital FROM country ORDER BY surfaceArea DESC LIMIT 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

index: 796
db_id: world_1
extra pred: SELECT count(*) ,  district FROM city WHERE population  >  ( SELECT population FROM city GROUP BY district ORDER BY population ASC LIMIT 1 ) GROUP BY district;
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

index: 798
db_id: world_1
medium pred: SELECT governmentform ,  SUM(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

index: 799
db_id: world_1
medium pred: SELECT continent ,  avg(lifeexpectancy) ,  sum(population) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

index: 800
db_id: world_1
medium pred: SELECT continent ,  sum(population) ,  avg(lifeexpectancy) FROM country WHERE lifeexpectancy  <  72 GROUP BY continent
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

index: 815
db_id: world_1
hard pred: SELECT Language FROM countrylanguage GROUP BY Language ORDER BY sum(percentage) DESC LIMIT 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

index: 816
db_id: world_1
hard pred: SELECT Language FROM countrylanguage GROUP BY Language ORDER BY SUM(Percentage) DESC LIMIT 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

index: 817
db_id: world_1
medium pred: SELECT LANGUAGE FROM countrylanguage GROUP BY CountryCode ORDER BY SUM(percentage) DESC LIMIT 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

index: 818
db_id: world_1
medium pred: SELECT countrycode ,  language FROM countrylanguage GROUP BY countrycode ORDER BY SUM(percentage) DESC LIMIT 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

index: 819
db_id: world_1
extra pred: SELECT COUNT(*) FROM country WHERE code IN ( SELECT countrycode FROM countrylanguage WHERE percentage  =  ( SELECT max(percentage) FROM countrylanguage WHERE language  =  "spanish" ) )
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 820
db_id: world_1
extra pred: SELECT count(*) FROM countrylanguage WHERE percentage  >  900 AND language  =  "Spanish"
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 821
db_id: world_1
medium pred: SELECT CountryCode FROM countrylanguage WHERE language  =  "Spanish" GROUP BY CountryCode ORDER BY MAX(percentage) DESC LIMIT 1
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 822
db_id: world_1
medium pred: SELECT CountryCode FROM countrylanguage WHERE percentage  >  900 AND Language  =  "Spanish"
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

index: 845
db_id: orchestra
extra pred: SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

index: 846
db_id: orchestra
extra pred: SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

index: 852
db_id: orchestra
medium pred: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

index: 856
db_id: orchestra
hard pred: SELECT Orchestra FROM orchestra EXCEPT SELECT T1.Orchestra_ID FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

index: 861
db_id: orchestra
medium pred: SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING count(*)  >  1
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

index: 885
db_id: network_1
medium pred: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id GROUP BY T1.student_id
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

index: 886
db_id: network_1
medium pred: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id GROUP BY T1.student_id
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

index: 893
db_id: network_1
medium pred: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T2.name  =  "Kyle"
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

index: 894
db_id: network_1
medium pred: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T2.name  =  'Kyle'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

index: 899
db_id: network_1
hard pred: SELECT DISTINCT T1.id FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id INTERSECT SELECT DISTINCT T1.id FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

index: 900
db_id: network_1
hard pred: SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

index: 901
db_id: network_1
hard pred: SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id INTERSECT SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

index: 902
db_id: network_1
hard pred: SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id INTERSECT SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

index: 906
db_id: network_1
medium pred: SELECT T1.name ,  count(*) FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.name
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

index: 907
db_id: network_1
extra pred: SELECT T2.name FROM likes AS T1 JOIN highschooler AS T2 ON T1.liked_id  =  T2.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

index: 909
db_id: network_1
medium pred: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

index: 915
db_id: network_1
hard pred: SELECT avg(grade) FROM highschooler WHERE id IN (SELECT friend_id FROM friend)
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

index: 916
db_id: network_1
hard pred: SELECT avg(grade) FROM highschooler WHERE id IN (SELECT friend_id FROM friend)
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

index: 918
db_id: network_1
extra pred: SELECT grade FROM highschooler EXCEPT SELECT grade FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

index: 921
db_id: dog_kennels
hard pred: SELECT avg(T1.age) FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

index: 922
db_id: dog_kennels
hard pred: SELECT avg(T2.age) FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

index: 923
db_id: dog_kennels
extra pred: SELECT T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.date_of_treatment  >  "2016-02-17" OR T1.role_code  =  "HYPO" INTERSECT SELECT T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.date_of_treatment  >  "2016-02-17" OR T1.role_code  =  "HYPO"
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

index: 924
db_id: dog_kennels
extra pred: SELECT T1.professional_id ,  T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.role_code  =  "Doctor" OR T2.cost_of_treatment  >  2000 UNION SELECT T1.professional_id ,  T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.role_code  =  "Doctor" OR T2.cost_of_treatment  >  2000 INTERSECT SELECT T1.professional_id ,  T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  >  2000 GROUP BY T1.professional_id HAVING count(*)  >=  2 UNION SELECT T1.professional_id ,  T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  >  2000 GROUP BY T1.professional_id HAVING count(*)  >=  2 INTERSECT SELECT T1.professional_id ,  T1.cell_number ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  >  2000 GROUP BY T1.professional_id HAVING count(*)  >=  2
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

index: 925
db_id: dog_kennels
hard pred: SELECT T1.name FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  >  1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

index: 926
db_id: dog_kennels
hard pred: SELECT T1.name FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T2.cost_of_treatment  >  1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

index: 927
db_id: dog_kennels
hard pred: SELECT first_name FROM owners INTERSECT SELECT first_name FROM professionals EXCEPT SELECT name FROM dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

index: 934
db_id: dog_kennels
medium pred: SELECT T1.professional_id ,  T2.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

index: 937
db_id: dog_kennels
extra pred: SELECT T2.last_name ,  T1.owner_id FROM Treatments AS T1 JOIN OWNERS AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

index: 938
db_id: dog_kennels
extra pred: SELECT T1.owner_id ,  T2.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

index: 943
db_id: dog_kennels
medium pred: SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.cell_number HAVING count(*)  >=  2
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

index: 945
db_id: dog_kennels
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

index: 946
db_id: dog_kennels
extra pred: SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

index: 947
db_id: dog_kennels
medium pred: SELECT T2.first_name ,  T3.date_of_treatment FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T1.treatment_type_code  =  T3.treatment_type_code
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

index: 948
db_id: dog_kennels
medium pred: SELECT T2.first_name ,  T3.date_of_treatment FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T1.treatment_type_code  =  T3.treatment_type_code
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

index: 951
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T1.last_name ,  T2.size_description FROM OWNERS AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

index: 952
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T1.last_name ,  T2.size_description FROM OWNERS AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

index: 955
db_id: dog_kennels
extra pred: SELECT T2.name ,  T3.date_of_treatment FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code  =  T2.breed_code JOIN treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T2.name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

index: 956
db_id: dog_kennels
extra pred: SELECT T2.name ,  T3.date_of_treatment FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id JOIN Treatments AS T3 ON T1.treatment_id  =  T3.treatment_id JOIN Breeds AS T4 ON T2.breed_code  =  T4.breed_code ORDER BY T4.breed_rank ASC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

index: 961
db_id: dog_kennels
extra pred: SELECT T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id ORDER BY T2.age ASC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

index: 962
db_id: dog_kennels
extra pred: SELECT T1.last_name FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id ORDER BY t2.age ASC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

index: 963
db_id: dog_kennels
medium pred: SELECT email_address FROM owners WHERE state  =  "Wisconsin" UNION SELECT email_address FROM professionals WHERE state  =  "Hawaii"
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

index: 973
db_id: dog_kennels
medium pred: SELECT first_name ,  last_name ,  email_address FROM owners WHERE city LIKE '%North%'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

index: 977
db_id: dog_kennels
medium pred: SELECT max(cost_of_treatment) FROM treatments
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

index: 981
db_id: dog_kennels
extra pred: SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'T')
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

index: 993
db_id: dog_kennels
easy pred: SELECT max(charge_amount) FROM charges WHERE charge_type  =  'Consultation'
easy gold: SELECT max(charge_amount) FROM Charges

index: 997
db_id: dog_kennels
medium pred: SELECT T1.breed_name ,  T2.size_description FROM Breeds AS T1 JOIN Sizes AS T2 ON T1.breed_code  =  T2.size_code
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

index: 999
db_id: dog_kennels
medium pred: SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

index: 1033
db_id: real_estate_properties
medium pred: SELECT T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

index: 1034
db_id: real_estate_properties
hard pred: SELECT property_name FROM Properties WHERE property_type_code  =  "House" OR property_type_code  =  "Apartment" INTERSECT SELECT property_name FROM Properties WHERE room_count  >  1
hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1

